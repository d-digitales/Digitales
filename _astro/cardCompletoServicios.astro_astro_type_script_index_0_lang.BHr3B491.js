const{replace:d}="",u=/[&<>'"]/g,l={"&":"&amp;","<":"&lt;",">":"&gt;","'":"&#39;",'"':"&quot;"},p=t=>l[t],h=t=>d.call(t,u,p);function g(t){return!!t&&typeof t=="object"&&"then"in t&&typeof t.then=="function"}const R=h;class c extends String{get[Symbol.toStringTag](){return"HTMLString"}}const s=t=>t instanceof c?t:typeof t=="string"?new c(t):t;function x(t){return Object.prototype.toString.call(t)==="[object HTMLString]"}function f(t){var e,r,n="";if(typeof t=="string"||typeof t=="number")n+=t;else if(typeof t=="object")if(Array.isArray(t)){var o=t.length;for(e=0;e<o;e++)t[e]&&(r=f(t[e]))&&(n&&(n+=" "),n+=r)}else for(r in t)t[r]&&(n&&(n+=" "),n+=r);return n}function m(){for(var t,e,r=0,n="",o=arguments.length;r<o;r++)(t=arguments[r])&&(e=f(t))&&(n&&(n+=" "),n+=e);return n}const b=/^(?:allowfullscreen|async|autofocus|autoplay|checked|controls|default|defer|disabled|disablepictureinpicture|disableremoteplayback|formnovalidate|hidden|inert|loop|nomodule|novalidate|open|playsinline|readonly|required|reversed|scoped|seamless|selected|itemscope)$/i,$=/&/g,y=/"/g,S=new Set(["set:html","set:text"]),i=(t,e=!0)=>e?String(t).replace($,"&#38;").replace(y,"&#34;"):t,w=t=>t.toLowerCase()===t?t:t.replace(/[A-Z]/g,e=>`-${e.toLowerCase()}`),a=t=>Object.entries(t).filter(([e,r])=>typeof r=="string"&&r.trim()||typeof r=="number").map(([e,r])=>e[0]!=="-"&&e[1]!=="-"?`${w(e)}:${r}`:`${e}:${r}`).join(";");function H(t,e,r=!0){if(t==null)return"";if(S.has(e))return console.warn(`[astro] The "${e}" directive cannot be applied dynamically at runtime. It will not be rendered as an attribute.

Make sure to use the static attribute syntax (\`${e}={value}\`) instead of the dynamic spread syntax (\`{...{ "${e}": value }}\`).`),"";if(e==="class:list"){const n=i(m(t),r);return n===""?"":s(` ${e.slice(0,-5)}="${n}"`)}if(e==="style"&&!(t instanceof c)){if(Array.isArray(t)&&t.length===2)return s(` ${e}="${i(`${a(t[0])};${t[1]}`,r)}"`);if(typeof t=="object")return s(` ${e}="${i(a(t),r)}"`)}return e==="className"?s(` class="${i(t,r)}"`):typeof t=="string"&&t.includes("&")&&P(t)?s(` ${e}="${i(t,!1)}"`):b.test(e)?s(t?` ${e}`:""):s(t===""?` ${e}`:` ${e}="${i(t,r)}"`)}const T=()=>{};class A{chunks=[];renderPromise;destination;flushed=!1;constructor(e,r){this.destination=e,this.renderPromise=r(this),g(this.renderPromise)&&Promise.resolve(this.renderPromise).catch(T)}write(e){this.flushed?this.destination.write(e):this.chunks.push(e)}flush(){if(this.flushed)throw new Error("The render buffer has already been flushed.");this.flushed=!0;for(const e of this.chunks)this.destination.write(e);return this.renderPromise}}function M(t,e){return new A(t,e)}typeof process<"u"&&Object.prototype.toString.call(process);const L=["http:","https:"];function P(t){try{const e=new URL(t);return L.includes(e.protocol)}catch{return!1}}new TextEncoder;new TextDecoder;function O(t){return!!t&&typeof t=="object"&&"render"in t&&typeof t.render=="function"}export{c as H,x as a,O as b,M as c,H as d,R as e,g as i,s as m,a as t};
